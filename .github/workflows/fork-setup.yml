name: Fork Setup

on:
  # Trigger on fork creation
  fork:
  # Also allow manual trigger
  workflow_dispatch:
  # Run on first push to main branch after fork
  push:
    branches: [ main ]
    paths:
      - '!.github/workflows/fork-setup.yml'

jobs:
  check-fork-status:
    runs-on: ubuntu-latest
    # Only run if this is a fork
    if: github.repository != 'redpop/claude-code-slash-commands'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check if already configured
      id: check_config
      run: |
        if [ -f ".fork-configured" ]; then
          echo "configured=true" >> $GITHUB_OUTPUT
        else
          echo "configured=false" >> $GITHUB_OUTPUT
        fi

    - name: Configure git
      if: steps.check_config.outputs.configured == 'false'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

    - name: Update repository configuration
      if: steps.check_config.outputs.configured == 'false'
      run: |
        # Extract repository information
        REPO_OWNER="${{ github.repository_owner }}"
        REPO_NAME="${{ github.event.repository.name }}"
        
        # Update .claude-commands.json
        if [ -f ".claude-commands.json" ]; then
          jq --arg owner "$REPO_OWNER" \
             --arg name "$REPO_NAME" \
             '.repo_owner = $owner | .repo_name = $name | .upstream = "redpop/claude-code-slash-commands"' \
             .claude-commands.json > .claude-commands.json.tmp
          mv .claude-commands.json.tmp .claude-commands.json
        fi
        
        # Update README examples to use fork URLs
        sed -i "s|https://raw.githubusercontent.com/redpop/claude-code-slash-commands/main/install.sh|https://raw.githubusercontent.com/$REPO_OWNER/$REPO_NAME/main/install.sh|g" README.md
        sed -i "s|https://github.com/redpop/claude-code-slash-commands|https://github.com/$REPO_OWNER/$REPO_NAME|g" README.md
        
        # Update documentation in commands that reference the original repo
        find commands -name "*.md" -type f -exec sed -i \
          "s|https://raw.githubusercontent.com/redpop/claude-code-slash-commands|https://raw.githubusercontent.com/$REPO_OWNER/$REPO_NAME|g" {} \;
        
        # Create fork configuration marker
        echo "Fork configured on $(date)" > .fork-configured
        echo "Repository: $REPO_OWNER/$REPO_NAME" >> .fork-configured

    - name: Create Pull Request
      if: steps.check_config.outputs.configured == 'false'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'ðŸ”§ Configure fork settings'
        title: 'Configure Fork Settings'
        body: |
          This PR automatically configures your fork with the correct repository URLs and settings.
          
          ## Changes made:
          - Updated `.claude-commands.json` with your repository information
          - Replaced hardcoded URLs in README.md with your fork's URLs
          - Updated command documentation to reference your fork
          - Added fork configuration marker
          
          ## Next steps:
          1. Review the changes
          2. Merge this PR
          3. Your fork is ready to use!
          
          You can now:
          - Add custom commands in the `commands/` directory
          - Modify existing commands for your needs
          - Share your fork URL with your team
        branch: configure-fork
        delete-branch: true
        labels: |
          fork-configuration
          automated

    - name: Add fork notice to README
      if: steps.check_config.outputs.configured == 'false'
      run: |
        # Add a notice at the top of README if not already present
        if ! grep -q "This is a fork of" README.md; then
          sed -i '1s/^/> **Note**: This is a fork of [redpop\/claude-code-slash-commands](https:\/\/github.com\/redpop\/claude-code-slash-commands). See the [Maintaining Your Fork](#maintaining-your-fork) section for synchronization instructions.\n>\n\n/' README.md
        fi

  setup-labels:
    runs-on: ubuntu-latest
    if: github.repository != 'redpop/claude-code-slash-commands'
    
    steps:
    - name: Create fork-specific labels
      uses: actions/github-script@v7
      with:
        script: |
          const labels = [
            { name: 'fork-configuration', color: '0052CC', description: 'Fork configuration and setup' },
            { name: 'custom-command', color: '5319E7', description: 'Custom command specific to this fork' },
            { name: 'upstream-sync', color: 'FBCA04', description: 'Related to syncing with upstream' }
          ];
          
          for (const label of labels) {
            try {
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label.name,
                color: label.color,
                description: label.description
              });
              console.log(`Created label: ${label.name}`);
            } catch (error) {
              if (error.status === 422) {
                console.log(`Label ${label.name} already exists`);
              } else {
                throw error;
              }
            }
          }

  create-sync-workflow:
    runs-on: ubuntu-latest
    if: github.repository != 'redpop/claude-code-slash-commands'
    needs: check-fork-status
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create upstream sync workflow
      run: |
        mkdir -p .github/workflows
        
        # Create sync workflow file
        cat > .github/workflows/sync-upstream.yml << 'EOFWORKFLOW'
        name: Sync with Upstream
        
        on:
          schedule:
            # Run weekly on Mondays at 00:00 UTC
            - cron: '0 0 * * 1'
          workflow_dispatch:
            inputs:
              sync_method:
                description: 'Sync method'
                required: true
                default: 'merge'
                type: choice
                options:
                  - merge
                  - rebase
        
        jobs:
          sync:
            runs-on: ubuntu-latest
            
            steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                token: \${{ secrets.GITHUB_TOKEN }}
        
            - name: Add upstream remote
              run: |
                git remote add upstream https://github.com/redpop/claude-code-slash-commands.git || true
                git fetch upstream
        
            - name: Sync with upstream
              run: |
                git config --local user.email "github-actions[bot]@users.noreply.github.com"
                git config --local user.name "github-actions[bot]"
                
                SYNC_METHOD="\${{ github.event.inputs.sync_method || 'merge' }}"
                
                if [ "\$SYNC_METHOD" = "rebase" ]; then
                  git rebase upstream/main
                else
                  git merge upstream/main -m "Merge upstream changes"
                fi
        
            - name: Push changes
              run: |
                git push origin main
        EOFWORKFLOW
        
        # Remove the leading spaces that the heredoc added
        sed -i 's/^        //' .github/workflows/sync-upstream.yml

    - name: Commit sync workflow
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .github/workflows/sync-upstream.yml
        git commit -m "Add upstream sync workflow" || echo "No changes to commit"
        git push || echo "No changes to push"